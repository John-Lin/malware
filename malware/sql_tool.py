import sqlite3


class SQLiteTool(object):
    def __init__(self):
        self.conn = sqlite3.connect('url_reports.db')

    def creat(self):
        try:
            self.conn.execute('''CREATE TABLE URLREPORTS
                   (ID TEXT PRIMARY KEY     NOT NULL,
                   URL            TEXT     NOT NULL,
                   POSITIVE       INT);''')
            # print "Table created successfully"
        except sqlite3.OperationalError, e:
            pass
            # print e

    def __update(self, key, pos):
        self.conn.execute("UPDATE URLREPORTS set POSITIVE = %d where ID = '%s'"
                           % (pos, key))
        # print "Update Operation done successfully";
        self.conn.commit()
        # print "Total number of rows updated :", self.conn.total_changes

    def __insert(self, key, url, pos):
        try:
            self.conn.execute('''INSERT INTO URLREPORTS (ID,URL,POSITIVE)
                                 VALUES (?,?,?)''', (key, url, pos))
            self.conn.commit()
        except sqlite3.IntegrityError, e:
            print '[ERROR]', e

    def insert2(self, key, url, pos):

        cursor = self.conn.execute("SELECT ID from URLREPORTS WHERE ID = '%s'"
                                    % key)

        try:
            key_in_table = cursor.next()[0]
        except StopIteration:
            key_in_table = None

        if key_in_table and key_in_table == key:
            print("[SQL.INFO] Update it")
            # if the URL in the table update it
            self.__update(key, pos)
        else:
            print("[SQL.INFO] insert the table")
            # else insert the table
            self.__insert(key, url, pos)

    def show_positive(self, key):
        cursor = self.conn.execute("SELECT POSITIVE from URLREPORTS WHERE ID = '%s'"
                                    % key)
        try:
            pos = int(cursor.next()[0])
        except StopIteration:
            pos = None

        return pos

    def show_url(self, key):
        cursor = self.conn.execute("SELECT URL from URLREPORTS WHERE ID = '%s'"
                                    % key)
        try:
            url = str(cursor.next()[0])
        except StopIteration:
            url = None

        return url

    def is_url(self, key):
        cursor = self.conn.execute("SELECT URL from URLREPORTS WHERE ID = '%s'"
                                    % key)
        try:
            url = str(cursor.next()[0])
            url = True
        except StopIteration:
            url = False

        return url

    def show(self):
        cursor = self.conn.execute("SELECT ID, URL, POSITIVE from URLREPORTS")
        for row in cursor:
           print "ID = ", row[0]
           print "URL = ", row[1]
           print "POSITIVE = ", row[2]
           print "=== END ==="

    def __del__(self):
        self.conn.close()


def test():
    import hashlib
    url = 'www.google.com'
    key = hashlib.sha1(url).hexdigest()
    print "The key is: ", key

    sql = SQLiteTool()
    sql.creat()

    sql.insert2(key, url, 100)

    print "=== NOW TABLE ==="
    sql.show()
    print "=== SHOW POSITIVE ==="
    print sql.show_positive(key)
    print "=== SHOW URL ==="
    print sql.show_url(key)


if __name__ == '__main__':
    sql = SQLiteTool()
    print "=== TABLE ==="
    sql.show()
